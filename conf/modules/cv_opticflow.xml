<!DOCTYPE module SYSTEM "module.dtd">

<module name="cv_opticflow" dir="computer_vision">
  <doc>
    <description>
        Compute Optic Flow from Ardrone2 Bottom Camera

        Computes Pitch- and rollrate corrected optic flow from downward looking
        ARDrone2 camera looking at a textured floor.

        - Sonar is required.
        - Controller can hold position
    </description>

    <define name="OPTICFLOW_AGL_ID" value="ABI_SENDER_ID" description="ABI sender id for AGL message (sonar measurement) (default: ABI_BROADCAST)"/>
  </doc>

  <header>
    <file name="opticflow_module.h"/>
  </header>

  <init fun="opticflow_module_init()"/>
  <periodic fun="opticflow_module_run()" start="opticflow_module_start()" stop="opticflow_module_stop()" autorun="TRUE"/>

  <makefile target="ap|sim|jsbsim|nps">
    <!-- Include the needed Computer Vision files -->
    <define name="modules/computer_vision" type="include"/>
    <file name="image.c" dir="modules/computer_vision/lib/vision"/>
    <file name="jpeg.c" dir="modules/computer_vision/lib/encoding"/>
    <!--file name="rtp.c" dir="modules/computer_vision/lib/encoding"/-->
    <file name="v4l2.c" dir="modules/computer_vision/lib/v4l"/>

    <!-- The optical flow module (calculator+stabilization) -->
    <file name="opticflow_module.c"/>
    <file name="opticflow_calculator.c" dir="modules/computer_vision/opticflow"/>
    
    <!-- Navigation files -->
    <file name="mavproject_navigation.c" dir="modules/computer_vision/opticflow"/>

    <!-- Main vision calculations -->
    <file name="fast_rosten.c" dir="modules/computer_vision/lib/vision"/>
    <file name="lucas_kanade.c" dir="modules/computer_vision/lib/vision"/>
    
    <!-- Tobias: Add flags to include all required libraries -->
    <flag name="LDFLAGS" value="pthread"/>
    <flag name="LDFLAGS" value="lrt"/>
    <flag name="LDFLAGS" value="static"/>
  </makefile>
  
  

  <makefile target="nps">
    <file name="viewvideo_nps.c"/>
  </makefile>

</module>

