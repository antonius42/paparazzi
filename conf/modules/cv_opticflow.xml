<!DOCTYPE module SYSTEM "module.dtd">

<module name="cv_opticflow" dir="computer_vision">
  <doc>
    <description>
        Compute Optic Flow from Ardrone2 Bottom Camera

        Computes Pitch- and rollrate corrected optic flow from downward looking
        ARDrone2 camera looking at a textured floor.

        - Sonar is required.
        - Controller can hold position
    </description>

    <!--section name="VISION" prefix="VISION_">
      <define name="PHI_PGAIN" value="500" description="optic flow pgain"/>
      <define name="PHI_IGAIN" value="10" description="optic flow igain"/>
      <define name="THETA_PGAIN" value="500" description="optic flow pgain"/>
      <define name="THETA_IGAIN" value="10" description="optic flow igain"/>
      <define name="DESIRED_VX" value="0" description="feedforward optic flow vx"/>
      <define name="DESIRED_VY" value="0" description="feedforward optic flow vy"/>
    </section-->
    <define name="OPTICFLOW_AGL_ID" value="ABI_SENDER_ID" description="ABI sender id for AGL message (sonar measurement) (default: ABI_BROADCAST)"/>
  </doc>
  <!--settings>
	  <dl_settings NAME="Vision Loop">
      <dl_settings name="vision">
        <dl_setting var="opticflow_stab.phi_pgain" module="computer_vision/opticflow_module" min="0" step="1" max="10000" shortname="kp_v_phi" param="VISION_PHI_PGAIN"/>
        <dl_setting var="opticflow_stab.phi_igain" module="computer_vision/opticflow_module" min="0" step="1" max="1000" shortname="ki_v_phi" param="VISION_PHI_IGAIN"/>
        <dl_setting var="opticflow_stab.theta_pgain" module="computer_vision/opticflow_module" min="0" step="1" max="10000" shortname="kp_v_theta" param="VISION_THETA_PGAIN"/>
        <dl_setting var="opticflow_stab.theta_igain" module="computer_vision/opticflow_module" min="0" step="1" max="1000" shortname="ki_v_theta" param="VISION_THETA_IGAIN"/>
        <dl_setting var="opticflow_stab.desired_vx" module="computer_vision/opticflow_module" min="-5" step="0.01" max="5" shortname="desired_vx" param="VISION_DESIRED_VX"/>
        <dl_setting var="opticflow_stab.desired_vy" module="computer_vision/opticflow_module" min="-5" step="0.01" max="5" shortname="desired_vy" param="VISION_DESIRED_VY"/>
      </dl_settings>
    </dl_settings>
  </settings-->

  <header>
    <file name="opticflow_module.h"/>
  </header>

  <init fun="opticflow_module_init()"/>
  <periodic fun="opticflow_module_run()" start="opticflow_module_start()" stop="opticflow_module_stop()" autorun="TRUE"/>

  <makefile target="ap|sim|jsbsim|nps">
    <!-- Include the needed Computer Vision files -->
    <define name="modules/computer_vision" type="include"/>
    <file name="image.c" dir="modules/computer_vision/lib/vision"/>
    <file name="jpeg.c" dir="modules/computer_vision/lib/encoding"/>
    <!--file name="rtp.c" dir="modules/computer_vision/lib/encoding"/-->
    <file name="v4l2.c" dir="modules/computer_vision/lib/v4l"/>

    <!-- The optical flow module (calculator+stabilization) -->
    <file name="opticflow_module.c"/>
    <file name="opticflow_calculator.c" dir="modules/computer_vision/opticflow"/>
    
    <!-- The stabilization has to be removed from the module... -->
    <!--file name="stabilization_opticflow.c" dir="modules/computer_vision/opticflow"/-->

    <!-- Main vision calculations -->
    <file name="fast_rosten.c" dir="modules/computer_vision/lib/vision"/>
    <file name="lucas_kanade.c" dir="modules/computer_vision/lib/vision"/>
    
    <!-- Tobias: Add flags to include all required libraries -->
    <flag name="LDFLAGS" value="pthread"/>
    <flag name="LDFLAGS" value="lrt"/>
    <flag name="LDFLAGS" value="static"/>
    
    <!-- This raw part should maybe be removed??? -->
    <!--raw>
      VIEWVIDEO_DEV         ?= UDP1
      VIEWVIDEO_HOST        ?= $(MODEM_HOST)
      VIEWVIDEO_PORT_OUT    ?= 5000
      VIEWVIDEO_PORT_IN     ?= 4999
      VIEWVIDEO_BROADCAST   ?= $(MODEM_BROADCAST)
      VIEWVIDEO_DEV_LOWER   = $(shell echo $(VIEWVIDEO_DEV) | tr A-Z a-z)

      VIEWVID_G_CFLAGS  = -DVIEWVIDEO_HOST=\"$(VIEWVIDEO_HOST)\" -DVIEWVIDEO_PORT_OUT=$(VIEWVIDEO_PORT_OUT)
      VIEWVID_CFLAGS  = -DUSE_$(VIEWVIDEO_DEV) -DVIEWVIDEO_DEV=$(VIEWVIDEO_DEV_LOWER)
      VIEWVID_CFLAGS += -D$(VIEWVIDEO_DEV)_PORT_OUT=$(VIEWVIDEO_PORT_OUT) -D$(VIEWVIDEO_DEV)_PORT_IN=$(VIEWVIDEO_PORT_IN)
      VIEWVID_CFLAGS += -D$(VIEWVIDEO_DEV)_BROADCAST=$(VIEWVIDEO_BROADCAST) -D$(VIEWVIDEO_DEV)_HOST=\"$(VIEWVIDEO_HOST)\"
      ifeq ($(VIEWVIDEO_USE_NC),)
        ap.CFLAGS += $(VIEWVID_G_CFLAGS) $(VIEWVID_CFLAGS)
      else
        ap.CFLAGS += $(VIEWVID_G_CFLAGS) -DVIEWVIDEO_USE_NC
      endif

      ap.CFLAGS += -DGUIDANCE_V_MODE_MODULE_SETTING=GUIDANCE_V_MODE_HOVER
      ap.CFLAGS += -DGUIDANCE_H_MODE_MODULE_SETTING=GUIDANCE_H_MODE_MODULE
    </raw-->
  </makefile>
  
  

  <makefile target="nps">
    <file name="viewvideo_nps.c"/>
  </makefile>

</module>

